@using ProgressTracker.Data
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/tracker.css"/>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>
<body>
    @if (SignInManager.IsSignedIn(User))
    {
        <header>
            <nav>
                <div class="navbar-section left">
                    <h5>Welcome</h5>
                </div>
                <div class="navbar-section center">
                    <h2>Progress Tracker</h2>
                </div>
                <div class="navbar-section right">
                    <button class="profile-dropdown" type="button" id="profileDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bi bi-person-circle"></i>
                    </button>
                    <ul class="dropdown-menu" data-bs-auto-close="outside">
                        <li>
                            @{var user = await UserManager.GetUserAsync(User);}
                            @if (user != null && string.IsNullOrEmpty(user.CanvasApiKey))
                            {
                                <form id="CanvasApiKeyForm">
                                    <input type="text" name="CanvasApiKey" id="canvasApiKey" placeholder="Canvas API Key" />
                                    <button type="submit" class="nav-btn">Save API key</button>
                                </form>
                            }
                            else
                            {
                                <div id="sync-wrapper">
                                    <button class="nav-btn" id="sync">Sync with Canvas</button>
                                    <button class="nav-btn" id="edit-key">Edit Key <i class="bi bi-pencil icon-colour"></i></button>
                                </div>
                            }
                        </li>
                        <li>
                            <div class="nav-item">
                                @UserManager.GetUserName(User)
                            </div>
                        </li>
                        <li>
                            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Account/Login", new { area = "Identity" })">
                                @Html.AntiForgeryToken()
                                <button class="nav-btn" id="logout" type="submit">Logout</button>
                            </form>
                        </li>
                    </ul>
                </div>
            </nav>
        </header>
    }
    <div class="container-fluid main">
        <main role="main" class="main">
            @RenderBody()
        </main>
    </div>

    @await Html.PartialAsync("_EditTaskModal")

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="~/js/task-manager.js"></script>

    @RenderSection("Scripts", required: false)
</body>
</html>
